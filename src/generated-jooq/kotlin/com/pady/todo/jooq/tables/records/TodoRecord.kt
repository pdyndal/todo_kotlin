/*
 * This file is generated by jOOQ.
 */
package com.pady.todo.jooq.tables.records


import com.pady.todo.jooq.tables.Todo

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TodoRecord() : UpdatableRecordImpl<TodoRecord>(Todo.TODO), Record4<Long?, Long?, String?, String?> {

    var tId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    var uId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    var title: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var content: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<Long?, Long?, String?, String?> = super.fieldsRow() as Row4<Long?, Long?, String?, String?>
    override fun valuesRow(): Row4<Long?, Long?, String?, String?> = super.valuesRow() as Row4<Long?, Long?, String?, String?>
    override fun field1(): Field<Long?> = Todo.TODO.T_ID
    override fun field2(): Field<Long?> = Todo.TODO.U_ID
    override fun field3(): Field<String?> = Todo.TODO.TITLE
    override fun field4(): Field<String?> = Todo.TODO.CONTENT
    override fun component1(): Long? = tId
    override fun component2(): Long? = uId
    override fun component3(): String? = title
    override fun component4(): String? = content
    override fun value1(): Long? = tId
    override fun value2(): Long? = uId
    override fun value3(): String? = title
    override fun value4(): String? = content

    override fun value1(value: Long?): TodoRecord {
        this.tId = value
        return this
    }

    override fun value2(value: Long?): TodoRecord {
        this.uId = value
        return this
    }

    override fun value3(value: String?): TodoRecord {
        this.title = value
        return this
    }

    override fun value4(value: String?): TodoRecord {
        this.content = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: String?, value4: String?): TodoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    constructor(tId: Long? = null, uId: Long? = null, title: String? = null, content: String? = null): this() {
        this.tId = tId
        this.uId = uId
        this.title = title
        this.content = content
    }
}
